{
/*
    tsconfig.json 是ts编译器的配置文件，
    "include", "exclude"
    ** 表示任意目录
    * 表示任意文件
*/
    "include": [
        "./src/**/*"
    ],
    "exclude": [
        "./src/hello/**/*"
    ],
    "files": [
        "./src/file1.ts"
    ],
    //最重要的配置项
    "compilerOptions": {
        //target 指定编译目标的版本，option be: 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'esnext'.ts
        "target": "ES6",

        //module option must be: 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext'.ts
       //"module": "ES2015", //推荐使用ES2015
       //"module": "system", //不推荐使用 system

        //lib用来指定项目中要使用的库， 缺省是 []， 如果不写，使用时不会自动提示
        //Value is not accepted. Valid values: "ES5",
        // "ES6", "ES2015", "ES2015.Collection", "ES2015.Core", "ES2015.Generator", "ES2015.Iterable", "ES2015.Promise", "ES2015.Proxy", "ES2015.Reflect", "ES2015.Symbol.WellKnown", "ES2015.Symbol", 
        //"ES2016", "ES2016.Array.Include", 
        //"ES2017", "ES2017.Intl", "ES2017.Object", "ES2017.SharedMemory", "ES2017.String", "ES2017.TypedArrays", 
        //"ES2018", "ES2018.AsyncGenerator", "ES2018.AsyncIterable", "ES2018.Intl", "ES2018.Promise", "ES2018.Regexp", 
        //"ES2019", "ES2019.Array", "ES2019.Object", "ES2019.String", "ES2019.Symbol", 
        //"ES2020", "ES2020.BigInt", "ES2020.Promise", "ES2020.String", "ES2020.Symbol.WellKnown", 
        //"ESNext", "ESNext.Array", "ESNext.AsyncIterable", "ESNext.BigInt", "ESNext.Intl", "ESNext.Promise", "ESNext.String", "ESNext.Symbol", 
        //"DOM", "DOM.Iterable","ScriptHost", "WebWorker", "WebWorker.ImportScripts".(1)
        "lib": ["ES6", "DOM",],

        //outDir 指定编译后文件目录
        "outDir": "dist",

        //outFile 合并为一个文件
        //"outFile": "./dist/target.js", 如果使用outFile， module必须是system，不推荐使用outFile, 直接用webpack 打包
        
        //是否对js文件编译，默认false,略过
        "allowJs": false,

        //是否检查js文件中代码语法，默认false, 不检查
        "checkJs": false,

        //是否移除注释
        "removeComments": true,

        //不生成编译后的文件.在不想生成js,只想尝试编译，检查语法时才用
        "noEmit": true,

        // 当有错误时不生成编译后的js文件
        "noEmitOnError": true,

        //所有严格语法检查的总开关
        "strict": true, //如果为true, 相当于其他语法检查选项都设为true

        //用来设置编译后的js文件是否开启"use strict"， 默认false
        "alwaysStrict": true,

        //不使用any
        "noImplicitAny": true, //如果ts文件中使用， 会报错

        // 不允许类型不明确的this
        "noImplicitThis": true,//如果ts文件中使用， 会报错

        //检查null
        "strictNullChecks": true

    }
}